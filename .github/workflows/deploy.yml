name: 'Website CI/CD'

on:
  workflow_dispatch:
    inputs:
      skip_tests:
        description: 'Skip tests (emergency deploy)'
        required: false
        default: false
        type: boolean

env:
  AWS_REGION: 'us-east-1'
  S3_BUCKET: 'innvestai-com'

jobs:
  build-and-test:
    name: 'Build and Test'
    runs-on: ubuntu-latest
    if: ${{ !inputs.skip_tests }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run quality checks
        continue-on-error: true
        run: |
          echo "🔍 Running quality checks (non-blocking)..."
          
          echo "Running CSS linting..."
          npm run lint:css || echo "⚠️ CSS linting found issues (continuing deployment)"
          
          echo "Running JavaScript linting..."
          npm run lint:js || echo "⚠️ JS linting found issues (continuing deployment)"
          
          echo "Running HTML validation..."
          npm run validate:html || echo "⚠️ HTML validation found issues (continuing deployment)"
          
          echo "✅ Quality checks completed (deployment will continue regardless)"

      - name: Build production assets
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-assets
          path: |
            css/styles.min.css
            js/main.min.js
          retention-days: 1

  deploy:
    name: 'Deploy to Production'
    runs-on: ubuntu-latest
    needs: build-and-test
    if: ${{ always() && (inputs.skip_tests || needs.build-and-test.result == 'success') }}
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Node.js (emergency deploy)
        if: ${{ inputs.skip_tests }}
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Build (emergency deploy)
        if: ${{ inputs.skip_tests }}
        run: |
          npm ci
          npm run build

      - name: Download build artifacts
        if: ${{ !inputs.skip_tests }}
        uses: actions/download-artifact@v4
        with:
          name: build-assets

      - name: Deploy to S3
        run: |
          aws s3 sync . s3://$S3_BUCKET \
            --delete \
            --exclude '.git/*' \
            --exclude '.github/*' \
            --exclude 'node_modules/*' \
            --exclude '*.md' \
            --exclude 'package*.json' \
            --exclude 'deploy-local.*' \
            --exclude 'harik-dev/*' \
            --cache-control 'max-age=31536000' \
            --exclude '*.html'
          
          aws s3 sync . s3://$S3_BUCKET \
            --exclude '*' \
            --include '*.html' \
            --cache-control 'max-age=3600'

      - name: Invalidate CloudFront
        run: |
          DISTRIBUTION_ID=$(aws cloudfront list-distributions \
            --query "DistributionList.Items[?contains(Aliases.Items, 'innvestai.com')].Id" \
            --output text)
          
          aws cloudfront create-invalidation \
            --distribution-id $DISTRIBUTION_ID \
            --paths "/*" \
            --no-cli-pager

      - name: Verify deployment
        run: |
          sleep 10
          curl -fsSL https://innvestai.com > /dev/null
          echo "✅ Website deployed successfully"

      - name: Create summary
        run: |
          echo "## 🚀 Website Deployed" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: https://innvestai.com" >> $GITHUB_STEP_SUMMARY
          echo "- **S3 Bucket**: $S3_BUCKET" >> $GITHUB_STEP_SUMMARY
          echo "- **Features**: Optimistic UI enabled" >> $GITHUB_STEP_SUMMARY
